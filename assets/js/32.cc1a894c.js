(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{352:function(t,s,e){"use strict";e.r(s);var a=e(4),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"安装ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装ssh"}},[t._v("#")]),t._v(" 安装ssh")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" openssh-server\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl status "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看ssh状态")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ufw allow "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 防火墙允许ssh")]),t._v("\n")])])]),s("h2",{attrs:{id:"查看系统版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看系统版本"}},[t._v("#")]),t._v(" 查看系统版本")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /proc/version\n\n或\n\n$ lsb_release "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面安装了lsb-release")]),t._v("\n")])])]),s("h2",{attrs:{id:"更换apt源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更换apt源"}},[t._v("#")]),t._v(" 更换apt源")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /etc/apt/sources.list /etc/apt/sources.list.backup\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/apt/sources.list\n\n// ubuntu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("版本 阿里源\ndeb http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse\n\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n")])])]),s("h2",{attrs:{id:"安装常用包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装常用包"}},[t._v("#")]),t._v(" 安装常用包")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" net-tools "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apt-transport-https "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" lsb-release "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# apt使用https curl linux标准库")]),t._v("\n")])])]),s("h2",{attrs:{id:"安装docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[t._v("#")]),t._v(" 安装docker")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-fsSL")]),t._v(" https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gpg "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--dearmor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" /usr/share/keyrings/docker-archive-keyring.gpg "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \\\n  '),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cs")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' stable"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /etc/apt/sources.list.d/docker.list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要向 sources.list 中添加 Docker 软件源")]),t._v("\n  \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce docker-ce-cli containerd.io docker-compose-plugin\n\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run hello-world "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试一下")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gpasswd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将当前用户加入到Docker用户组")]),t._v("\n$ newgrp "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#更新用户组")]),t._v("\n")])])]),s("h2",{attrs:{id:"docker-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-命令"}},[t._v("#")]),t._v(" docker 命令")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-itd")]),t._v(" ubuntu /bin/bash "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -i: 交互式操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -t: 终端，exit退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -d: 后台运行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -p: <主机端口>:<容器端口> 端口映射")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu: ubuntu 镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /bin/bash：命令，会替换Dockerfile中的CMD")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看启动的容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -a 查看所有容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -q 只查看容器id，一般用于命令嵌套")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container stop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止容器")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行容器")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container restart "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启容器")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /bin/bash "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入容器")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除容器")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看正在运行的容器")]),t._v("\n\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" search "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("镜像名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找镜像")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("镜像名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取镜像")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出本地主机上的镜像")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" image "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("镜像名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除镜像")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("镜像名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建镜像， 最后有个点")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" bridge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("网络名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#新建网络")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -d：参数指定 Docker 网络类型，有 bridge、overlay")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $ docker run -itd --name u1 --network <网络名> ubuntu /bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $ docker run -itd --name u2 --network <网络名> ubuntu /bin/bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 两个容器连接到同一网络，就可以通过名称访问，名称代替容器主机IP")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" Dockerfile")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Dockerfile 指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("FROM")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定基础镜像，用于后续的指令构建")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LABEL")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("添加镜像的元数据，使用键值对的形式")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("RUN")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在构建过程中在镜像中执行命令")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("CMD")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定容器创建时的默认命令"),s("br"),t._v("可以被docker run中的命令覆盖"),s("br"),t._v("如果存在多个 CMD 指令，仅最后一个生效")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ENTRYPOINT")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置容器创建时的主要命令"),s("br"),t._v("不可被docker run中的命令覆盖"),s("br"),t._v("存在多个 ENTRYPOINT 指令，仅最后一个生效")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("EXPOSE")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("声明容器运行时监听的特定网络端口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ENV")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在容器内部设置环境变量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ADD")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将文件、目录或远程URL复制到镜像中，推荐直接用COPY")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("COPY")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("将文件或目录复制到镜像中")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("VOLUME")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("为容器创建挂载点或声明卷")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("WORKDIR")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置后续指令的工作目录")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("USER")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定后续指令的用户上下文")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ARG")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('定义在构建过程中传递给构建器的变量，可使用 "docker build" 命令设置')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ONBUILD")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("当该镜像被用作另一个构建过程的基础时，添加触发器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("STOPSIGNAL")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置发送给容器以退出的系统调用信号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HEALTHCHECK")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义周期性检查容器健康状态的命令")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("SHELL")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("覆盖Docker中默认的shell，用于RUN、CMD和ENTRYPOINT指令")])])])]),t._v(" "),s("h2",{attrs:{id:"docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" docker-compose")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docker-practice.github.io/zh-cn/compose/commands.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令说明 · Docker -- 从入门到实践 (docker-practice.github.io)"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docker-practice.github.io/zh-cn/compose/compose_file.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Compose 模板文件 · Docker -- 从入门到实践 (docker-practice.github.io)"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"docker资源网站"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker资源网站"}},[t._v("#")]),t._v(" docker资源网站")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docker-practice.github.io/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前言 · Docker -- 从入门到实践 (docker-practice.github.io)"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com/reference/dockerfile/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dockerfile reference | Docker Docs"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://hub.docker.com"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);